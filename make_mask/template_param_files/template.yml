# ========================================
# Template parameter file for make_mask.py
# ========================================
#
# This file lists all the available parameter options. It should not be used
# as an input parameter file directly, but copied and modified appropriately.
#
# Parameters marked as [Optional] may be omitted; the script will assume
# the given defaults if they are not provided.

# I/O SETTINGS
fname:             my_run               # The save name for the mask file
output_dir:        path/to/output/mask  # Directory to which the mask image and hdf5 file are saved
snapshot_file:     path/to/parent/box   # The location of the snapshot we are creating the mask from
snapshot_base:     path/to/parent/box   # Alternative to snapshot_file, with `$isnap` placeholder for snapshot index (only used if snapshot_file is not given).
ics_file:          path/to/ics/file     # Separate file in which position-encoding ICs are stored. Only significant if `ids_encode_position` is False.
primary_snapshot:  6                    # The primary snapshot index (only used if `snapshot_file` is not given).
padding_snaps:     None                 # [Optional] Snapshots used for padding. Single snapshot if one number; continuous range if two numbers; continuous range with spacing if three. Default: None, no padding.

# PADDING OPTIONS
pad_lcs_as_particles: False     # [Optional] Should particle-based padding be applied to the Lagrangian Coordinates in analogy to snapshots? Default: False.
highres_padding_width:  1.      # Width of padding margin applied around high-res region.
cell_padding_width:  0.0        # Extent of padding cells (in Lagrangian frame) around target cells [Mpc].
pad_full_cells:     False       # Should padding be applied to full cells in Lagrangian Coordinates? Default: False

# MASK GENERATION
min_num_per_cell:  3            # [Optional] Minimum number of particles per cell (default 3). Cells with fewer than `min_num_per_cell` particles are ignored.
cell_size_mpc:     auto         # [Optional] Cell size in Mpc (default 3.). Can also be `auto` (see below).
cell_size_mips:    3.0          # Cell size in units of mean inter-particle separation. Only used if `cell_size_mpc` is `auto`.
dither_gap:        None         # [Optional] Dither shift applied to particles before checking for occupied cells, in units of mean inter-particle separation. Default: None, no dither applied.

# TECHNICAL PARAMETERS
base_cosmology:      Planck2018     # Name of cosmology used for parent simulation. Only used to calculate the mean inter-particle separation.
ids_encode_position: True           # [Optional] Do the particle IDs in the snapshot(s) directly encode their Lagrangian coordinates? If not, the `ics_file` must be specified, with IDs representing particle indices in that file.
ids_type:            Peano          # Method used to encode Lagrangian coordinates in particle IDs: `Peano` (Peano-Hilbert index) or `Lattice` (sequential lattice indexing as in monofonIC).
bits:                21             # The number of bits that were used in the particle IDs for the Peano-Hilbert indexing (EAGLE runs use 14). Only significant if `ids_type` is `Peano`.
parent_npart:        512            # The number of particles per dimension in the parent simulation. Only significant if `ids_type` = Lattice.
orig_id_name:        PeanoHilbertIDs # [Optional] The name of the data set in `ics_file` that contains the position-encoding particle IDs. Only significant if `ids_encode_position` is False.
data_type:           swift          # Type of snapshot to generate the mask from. Currently only `swift' is supported.
divide_ids_by_two:   False          # Switch to divide input particle IDs by 2. This is required if the IDs were multiplied by 2 during gas/DM splitting (as in EAGLE), but generally not for DM-only parent runs.
highres_diffusion_buffer:  60.0   # Radius of shell around the target region in which to load particles in primary snapshot. Only used if direct_primary_load is 0.
direct_primary_load: 1           # Switch to load entire snapshot (1), rather than only a subset based on top-level cells (0).

# AMOEBA TOPOLOGY #
topology_fill_holes:       True     # [Optional] Enable algorithm for filling holes (default: True).
topology_dilation_n_iter:   1       # [Optional] Number of iterations of the algorithm for extrusion. Set to 0 (default) to disable.
topology_closing_n_iter:    1       # [Optional] Number of iterations of the algorithm for rounding edges. Set value to 0 (default) to disable.

# SELECTION OF TARGET REGION BASED ON VR HALOES #
select_from_vr:      True           # Switch to select automatic selection of target haloes from Velociraptor catalogue, based on following settings. If False, the position and extent of the target region must be specified manually below (`MANUAL GROUP SELECTION`).
vr_file:             path/to/stf/properties  # Path to the Velociraptor group catalogue to select the target halo from.
sort_type:           M200crit       # Property by which to sort haloes for selecting the target. Options are 'm200crit' (default), 'm500crit', or 'None'. In the latter case, the halo order as in the catalogue is used.
target_mass:         None           # If specified, select the halo closest in mass to this value (according to `sort_type`).
group_number:        0              # Index of the halo to centre the mask on, possibly in sorted mass order depending on value of `sort_type`. Currently required (but ignored) even if target_mass is set.
highres_radius_r200: 1.             # [Optional] Minimum target high-resolution radius in units of the halo's r200c (may be 0 [default] for selection only on r500c).
highres_radius_r500: 5.             # [Optional] Minimum target high-resolution radius in units of the halo's r500c (may be 0 [default] for selection only on r200c).
highres_radius_min:  0.             # [Optional] Fixed minimum radius of high-resolution sphere (independent of r200c or r500c). Default: 0.

# MANUAL TARGET REGION SELECTION #
centre:             [0., 0., 0.]       # Centre of the target high-resolution region in the specified snapshot file.
shape:             sphere              # Shape of the region to reproduce. Options are: 'sphere', 'cubiod', or 'slab'.
radius:              1.                # Radius of target high-resolution region (only meaningful if `shape` is 'sphere').
dim:                 [1., 1., 1.]      # Side lengths of target high-resolution region (only meaningful if `shape` is `cuboid` or `slab').
